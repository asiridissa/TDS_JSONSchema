{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "TDS TRCPSchema v0.1",
  "description": "Based on XML Schema tcrp.demandtrans.com_TCRPSchema V0.8-proposed",
  "type": "object",
  "properties": {

    "tripStatusChange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tripTicketId": { "$ref": "#/$defs/TripTicketIdProperty" },
        "status": {
          "type": "string",
          "enum": [ "Cancel", "Expire" ]
        },
        "reasonDescription": { "type": "string" },
        "canceledBy": {
          "type": "string",
          "enum": [ "OrderingClient", "Rider", "Provider" ]
        }
      },
      "required": [ "tripTicketId", "status", "canceledBy" ]
    },

    "tripRequest": {
      "type": "object",
      "description": "Telegram #: 1A; From: ordering client; To: trip provider(s); Purpose: query for trip availability",
      "properties": {
        "tripTicketId": { "$ref": "#/$defs/TripTicketIdProperty" },
        "pickupAddress": { "$ref": "#/$defs/AddressType" },
        "detailedPickupLocationDescription": { "type": "string" },
        "dropoffAddress": { "$ref": "#/$defs/AddressType" },
        "detailedDropoffLocationDescription": { "type": "string" },
        "pickupTime": { "$ref": "#/$defs/Time" },
        "appointmentTime": { "$ref": "#/$defs/Time" },
        "dropoffTime": { "$ref": "#/$defs/Time" },
        "pickupWindowStartTime": { "$ref": "#/$defs/Time" },
        "pickupWindowEndTime": { "$ref": "#/$defs/Time" },
        "detoursPermissible": { "type": "boolean" },
        "negotiatedPickupTime": { "$ref": "#/$defs/Time" },
        "hardConstraintOnPickupTime": { "type": "boolean" },
        "hardConstraintOnDropoffTime": { "type": "boolean" },
        "customerInfo": { "$ref": "#/$defs/CustomerInfoType" },
        "specialAttributes": { "$ref": "#/$defs/SpecialAttributesList" },
        "transportServices": { "$ref": "#/$defs/ValueList" },
        "numOtherReservedPassengers": {
          "type": "integer"
        },
        "openAttribute": {
          "type": "string",
          "description": "Open attribute for local use"
        },
        "tripPurpose": { "$ref": "#/$defs/TripPurposeList" },
        "notesForDriver": {
          "type": "string"
        }
      },
      "required": [ "tripTicketId" ]
    },

    "tripRequestResponse": {
      "type": "object",
      "description": "Telegram #: 1B; From: trip provider; To: ordering client;  Purpose: reply to telegram 1A for accepting the trip or denying the trip (tripAvailable)",
      "properties": {
        "tripTicketId": { "$ref": "#/$defs/TripTicketIdProperty" },
        "tripAvailable": { "type": "boolean" },
        "scheduledPickupTime": { "$ref": "#/$defs/Time" },
        "scheduledPickupPoint": { "$ref": "#/$defs/AddressType" },
        "scheduledDropoffPoint": { "$ref": "#/$defs/AddressType" },
        "transferPoint": { "$ref": "#/$defs/AddressType" },
        "PaymentTypeList": { "$ref": "#/$defs/PaymentTypeList" },
        "fareAmount": { "type": "integer" },
        "transportServices": {
          "$ref": "#/$defs/ValueList"
        }
      },
      "required": [ "tripTicketId", "tripAvailable" ]
    },

    "clientOrderConfirmation": {
      "type": "object",
      "description": "Telegram #: 2A; From: ordering client; To: trip provider(s); Purpose: order confirmation",
      "properties": {
        "tripTicketId": { "$ref": "#/$defs/TripTicketIdProperty" },
        "tripConfirmed": { "type": "boolean" }
      },
      "required": [ "tripTicketId", "tripConfirmed" ]
    },

    "customerInfo": {
      "$ref": "#/$defs/CustomerInfoType"
    },

    "providerOrderConfirmation": {
      "type": "object",
      "description": "Telegram #: 2B; From: trip provider; To: ordering client; Purpose: confirm trip is scheduled",
      "properties": {
        "tripTicketId": { "$ref": "#/$defs/TripTicketIdProperty" },
        "scheduledPickupTime": { "$ref": "#/$defs/Time" },
        "scheduledPickupPoint": { "$ref": "#/$defs/AddressType" },
        "scheduledDropoffPoint": { "$ref": "#/$defs/AddressType" },
        "transferPoint": { "$ref": "#/$defs/AddressType" },
        "paymentType": { "$ref": "#/$defs/PaymentTypeList" },
        "fareAmount": { "type": "integer" },
        "transportServices": { "$ref": "#/$defs/ValueList" },
        "vehicleNumber": { "type": "string" },
        "driverId": { "type": "string" },
        "driverName": { "type": "string" },
        "vehicleInformation": { "type": "string" },
        "availabilityForService": { "$ref": "#/$defs/Time" },
        "fuelRange": { "type": "integer" },
        "ambulatorySpacePoints": {
          "type": "integer"
        },
        "largeWheelchairSpacePoints": {
          "type": "integer"
        },
        "hasRamp": { "type": "boolean" },
        "hasLift": { "type": "boolean" },
        "standardWheelchairSpacePoints": {
          "type": "integer"
        },
        "cargoSpacePoints": {
          "type": "integer"
        },
        "vehicleVIN": {
          "type": "integer"
        },
        "vehicleModel": { "type": "string" },
        "conversionFactorForAmbulatoryPointsToStandardWheelchairPoints": {
          "type": "integer"
        },
        "conversionFactorForAmbulatoryPointsToLargeWheelchairPoints": { "type": "integer" },
        "flatFloor": { "type": "string" },
        "owner": { "type": "string" },
        "rideVibrationQuality": {
          "type": "string"
        }
      },
      "required": [ "tripTicketId" ]
    },

    "vehicleGeographicLocation": {
      "type": "object",
      "description": "The coordinates for the address and potentially a known zone",
      "properties": {
        "vehicleDistance": { "$ref": "#/$defs/VehicleDistance" },
        "zone": { "type": "string" },
        "typeOfCoordinate": {
          "type": "string",
          "description": "Shall be of type WGS84",
          "enum": [ "WGS84", "WGS-84", "RT90" ],
          "nullable": false
        },
        "lat": { "type": "integer" },
        "long": { "type": "integer" },
        "precision": {
          "type": "integer",
          "description": "Precision shall be from GPS-unit in vehicle and measured in meter. This is the deviation in position measured by the &gt;GPS-unit."
        },
        "speed": {
          "type": "number",
          "format": "float",
          "description": "Speed shall be from GPS-unit in vehicle and measured in meter per second."
        },
        "speedSource": {
          "description": "Speed measured at GPS or VEHICLE.",
          "enum": [ "gpsunit", "taximeter" ]
        },
        "direction": {
          "type": "integer",
          "description": "Direction shall be from GPS-unit in vehichle and measured in degrees (0 - 360 degrees)"
        },
        "height": {
          "type": "number",
          "format": "float",
          "description": "Height shall be from GPS-unit in vehicle and measured in meter. May be measured in meter with decimals."
        },
        "deviationSpeed": {
          "type": "number",
          "format": "float",
          "description": "Deviation in speed"
        }
      },
      "required": [ "typeOfCoordinate" ]
    },

    "tripTask": {
      "type": "object",
      "description": "Telegram #: 3A; From: trip provider; To: vehicle; Purpose: control vehicle",
      "properties": {
        "tripTicketId": { "$ref": "#/$defs/TripTicketIdProperty" },
        "tripTaskId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique ID from provider"
        },
        "customerPickupLocInVehPerformanceSequence": {
          "type": "integer",
          "minimum": 0
        },
        "pickupNodeAddress": { "$ref": "#/$defs/AddressType" },
        "pickupNodeScheduledTime": { "$ref": "#/$defs/Time" },
        "detailedPickupLocationDescription": { "type": "string" },
        "customerDropoffLocInVehPerformanceSequence": {
          "type": "integer",
          "minimum": 0
        },
        "dropoffNodeAddress": { "$ref": "#/$defs/AddressType" },
        "dropoffNodeScheduledTime": { "$ref": "#/$defs/Time" },
        "detailedDropoffLocationDescription": { "type": "string" },
        "customerMobilePhone": { "type": "integer" },
        "customerName": { "type": "string" },
        "numOtherReservedPassengers": { "type": "integer" },
        "notesForDriver": {
          "type": "string",
          "description": "Free-form long text field for notes to driver concerning customer service needs"
        },
        "specialAttributes": { "$ref": "#/$defs/SpecialAttributesList" },
        "paymentType": { "$ref": "#/$defs/PaymentTypeList" },
        "fareAmount": { "type": "integer" }
      },
      "required": [ "tripTicketId" ]
    },

    "tripTaskConfirmation": {
      "type": "object",
      "description": "Telegram #: 3B; From: vehicle; To: trip provider; Purpose: confirm vehicle performed task",
      "properties": {
        "tripTicketId": { "$ref": "#/$defs/TripTicketIdProperty" },
        "tripTaskId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique ID from provider"
        },
        "customerLocInDropoffSequence": {
          "type": "integer",
          "minimum": 0
        },
        "nodePerformedTime": { "$ref": "#/$defs/Time" },
        "vehicleNumber": { "type": "string" },
        "tripStatus": {
          "type": "string",
          "enum": [ "performed", "no show", "no pickup" ]
        },
        "driverId": {
          "type": "string"
        }
      },
      "required": [ "tripTicketId", "tripStatus" ]
    },

    "tripTaskCompletion": {
      "type": "object",
      "description": "Telegram #: 4A; From: trip provider(s); To: ordering client; Purpose: performed trip data",
      "properties": {
        "tripTicketId": { "$ref": "#/$defs/TripTicketIdProperty" },
        "cost": { "type": "integer" },
        "performedPickupPoint": { "$ref": "#/$defs/AddressType" },
        "performedPickupTime": { "$ref": "#/$defs/Time" },
        "performedDropoffPoint": { "$ref": "#/$defs/AddressType" },
        "performedDropoffTime": { "$ref": "#/$defs/Time" },
        "performedDistance": { "type": "integer" },
        "performedDistanceUnit": { "$ref": "#/$defs/DistanceUnitList" },
        "performedDurationInMinutes": { "type": "integer" },
        "detourOccur": { "type": "boolean" },
        "transferPoint": { "$ref": "#/$defs/AddressType" },
        "paymentType": { "$ref": "#/$defs/PaymentTypeList" },
        "fareAmount": { "type": "integer" },
        "specialAttributes": { "$ref": "#/$defs/SpecialAttributesList" },
        "transportServices": { "$ref": "#/$defs/ValueList" }
      },
      "required": [ "tripTicketId" ]
    },

    "customerReferral": {
      "type": "object",
      "description": "Telegram #: 0A; From: ordering client; To: trip provider; Purpose: Send customer information to provider for possible services",
      "properties": {
        "customerReferralId": {
          "type": "string",
          "description": "unique ID from ordering client"
        },
        "customerContactDate": {
          "type": "string",
          "format": "date"
        },
        "note": { "type": "string" },
        "customerInfo": {
          "$ref": "#/$defs/CustomerInfoType"
        }
      },
      "required": [ "customerReferralId", "customerContactDate" ]
    },

    "customerReferralResponse": {
      "type": "object",
      "description": "Telegram #: 1C; Sent from ordering client To: trip provider(s) or ; trip provider to ordering client Purpose: to report trip status change due to being canceled or no longer available",
      "properties": {
        "customerReferralId": {
          "type": "string",
          "description": "unique ID from ordering client"
        },
        "referralResponseType": { "type": "string" },
        "note": {
          "type": "string"
        }
      },
      "required": [ "customerReferralId" ]
    }

  },
  "$defs": {
    "TripTicketIdProperty": {
      "type": "string",
      "format": "uuid",
      "description": "Unique ID from ordering client",
      "minLength": 1
    },

    "CustomerInfoType": {
      "type": "object",
      "properties": {
        "tripTicketId": { "$ref": "#/$defs/TripTicketIdProperty" },
        "firstLegalName": { "type": "string" },
        "nickName": { "type": "string" },
        "middleName": { "type": "string" },
        "lastName": { "type": "string" },
        "address": { "$ref": "#/$defs/AddressType" },
        "phone": {
          "type": "integer"
        },
        "mobilePhone": {
          "type": "integer"
        },
        "mailingBillingAddress": { "$ref": "#/$defs/AddressType" },
        "fundingEntityBillingInformation": { "type": "string" },
        "fundingType": { "type": "boolean" },
        "fundingEntityId": { "type": "string" },
        "gender": { "type": "string" },
        "lowIncome": { "type": "boolean" },
        "disability": { "type": "boolean" },
        "language": { "type": "string" },
        "race": { "type": "string" },
        "ethnicity": { "type": "boolean" },
        "emailAddress": { "type": "string" },
        "veteran": { "type": "string" },
        "caregiverContactInformation": { "type": "string" },
        "emergencyPhoneNumber": {
          "type": "integer"
        },
        "emergencyContactName": { "type": "string" },
        "emergencyContactRelationship": { "type": "string" },
        "requiredCareComments": { "type": "string" },
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "customerId": { "type": "string" },
        "notesForDriver": {
          "type": "string"
        }
      }
    },

    "AddressType": {
      "type": "object",
      "description": "The address known to receiving system",
      "properties": {
        "addressName": {
          "type": "string",
          "example": "McDonalds",
          "minLength": 1
        },
        "street": { "type": "string" },
        "street2": { "type": "integer" },
        "notes": {
          "type": "string",
          "example": "Green door around the back"
        },
        "city": { "type": "string" },
        "state": { "type": "string" },
        "postalCode": { "type": "string" },
        "country": { "type": "string" },
        "lat": { "type": "integer" },
        "long": { "type": "integer" }
      },
      "required": [ "addressName", "street", "city", "state", "postalCode", "country" ]
    },

    "Time": {
      "type": "object",
      "description": "Should normally be the local time.",
      "properties": {
        "TimeAccuracy": {
          "type": "string",
          "description": "Used to indicate accepted deviation in attribute time"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Timezone used in comunication. Default is local timezone. See ISO 8601 for more information."
        },
        "DwellTime": {
          "type": "integer",
          "description": "Time used to finish this node"
        },
        "TimeType": { "$ref": "#/$defs/TimeType" }
      },
      "required": [ "time" ]
    },

    "TimeType": {
      "type": "string",
      "enum": [ "Time2101", "ScheduledTime", "Time2102", "EstimatedTime", "Time2103", "PromisedTime", "Time2104", "Actual", "Time2105", "Scheduled", "Time2107", "Estimated", "Time2106", "Promised", "Time2108", "Asap", "EstimatedEndTime", "EstimatedStartTime" ]
    },

    "DistanceUnitList": {
      "type": "string",
      "enum": [ "Miles", "Kilometers" ]
    },

    "PaymentTypeList": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "cash", "card", "account", "ticket", "noShow", "providerCompensation" ]
      }
    },

    "SpecialAttributesList": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "A", "AL", "C", "CU", "D2D", "DA", "DTD", "E", "HI", "IDD", "MI", "NLA", "O", "S", "SA", "SD", "SI", "TD", "U", "VI", "W", "WA", "WAK", "WE", "WT", "WW" ],
        "description": "- A:- Mobility Aid: Ambulatory - AL:- Mobility Aid: Ambulatory lift - C:- Mobility Aid: Cane - CU:- Mobility Aid: Crutches - D2D:- Service Needs: Door to door - DA:- Service Needs: Driver Alert - DTD:- Service Needs: Door THROUGH door - E:- Mobility Aid: Electric wheelchair - HI:- Service Needs: hearing impaired - IDD:- Medical: Intellectually or developmentally disabled - MI:- Medical: Dementia (memory impaired) - NLA:- Service Needs: Never leave alone/ no leave alone - O:- Service Needs: Oxygen - S:- Mobility Aid: Scooter - SA:- Service Needs: Service Animal - SD:- Service Needs: Seizure disorder - SI:- Medical: Speech impaired - TD:- Medical: Temporary Disability - U:- Service Needs: Unstable needs assistance - VI:- Medical: Vision impaired - W:- Mobility Aid: Wheelchair - WA:- Mobility Aid: Walker - WAK:- Mobility Aid: Knee walker - WE:- Mobility Aid: Extended leg w/c = Extended Leg Wheelchair - WT:- Mobility Aid: Transport Chair, Must Transfer - WW:- Mobility Aid: Wide wheelchair"
      }
    },

    "TripPurposeList": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "A", "D", "E", "ED", "G", "HR", "M", "MS", "P", "R", "T" ],
        "description": "- A:- Adult Day Program - D:- Dialysis - E:- Employment - ED:- Educational - G:- Grocery - HR:- Health-Related (includes dentist, pharmacy, etc.) - M:- Medical - MS:- Miscellaneous - P:- Personal - R:- Recreation - T:- Public transit"
      }
    },

    "ValueList": {
      "type": "array",
      "items": { "type": "string" }
    },

    "VehicleDistance": {
      "type": "object",
      "properties": {
        "startTime": {
          "allOf": [
            { "$ref": "#/$defs/Time" },
            {
              "description": "The time period to propose car starts"
            }
          ]
        },
        "stopTime": {
          "allOf": [
            {
              "$ref": "#/$defs/Time"
            },
            {
              "description": "The time period to propose car stops"
            }
          ]
        },
        "range": {
          "type": "integer",
          "description": "The distance within which an unoccupied vehicle shall be proposed"
        },
        "rangeUnit": {
          "type": "string",
          "enum": [ "meter", "seconds" ]
        }
      }
    }
  }
}